# Generated by Django 5.2.4 on 2025-09-24 21:18

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('divisas', '0007_metodocobro'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tauser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único identificador del Tauser', max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=200)),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo'), ('MANTENIMIENTO', 'En Mantenimiento'), ('TEMPORAL_CERRADO', 'Temporalmente Cerrado')], default='ACTIVO', max_length=20)),
                ('direccion', models.TextField(help_text='Dirección completa del Tauser')),
                ('ciudad', models.CharField(max_length=100)),
                ('pais', models.CharField(default='Chile', max_length=100)),
                ('permite_depositos', models.BooleanField(default=True, help_text='Si permite que los usuarios depositen dinero/divisas')),
                ('permite_retiros', models.BooleanField(default=True, help_text='Si permite que los usuarios retiren dinero/divisas')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tauser',
                'verbose_name_plural': 'Tausers',
                'db_table': 'tauser_tauser',
                'ordering': ['codigo', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='StockTauser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_disponible', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Cantidad disponible para operaciones', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('cantidad_reservada', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Cantidad reservada para transacciones pendientes', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('stock_minimo', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), help_text='Stock mínimo antes de alertas', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('stock_maximo', models.DecimalField(decimal_places=8, default=Decimal('1000000.00000000'), help_text='Stock máximo permitido', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('alerta_stock_bajo', models.BooleanField(default=True, help_text='Enviar alertas cuando el stock esté bajo')),
                ('fecha_ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('moneda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks_tauser', to='divisas.moneda')),
                ('tauser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='tauser.tauser')),
            ],
            options={
                'verbose_name': 'Stock de Tauser',
                'verbose_name_plural': 'Stocks de Tausers',
                'db_table': 'tauser_stock_tauser',
                'ordering': ['tauser', 'moneda'],
                'unique_together': {('tauser', 'moneda')},
            },
        ),
        migrations.CreateModel(
            name='MovimientoStockTauser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_movimiento', models.CharField(choices=[('DEPOSITO', 'Depósito de Cliente'), ('RETIRO', 'Retiro de Cliente'), ('REPOSICION', 'Reposición de Stock')], max_length=20)),
                ('cantidad', models.DecimalField(decimal_places=8, help_text='Cantidad del movimiento (positiva para entradas, negativa para salidas)', max_digits=20)),
                ('cantidad_anterior', models.DecimalField(decimal_places=8, help_text='Cantidad disponible antes del movimiento', max_digits=20)),
                ('cantidad_nueva', models.DecimalField(decimal_places=8, help_text='Cantidad disponible después del movimiento', max_digits=20)),
                ('referencia_transaccion', models.CharField(blank=True, help_text='ID de transacción relacionada', max_length=100)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones del movimiento')),
                ('fecha_movimiento', models.DateTimeField(auto_now_add=True)),
                ('stock_tauser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimientos', to='tauser.stocktauser')),
            ],
            options={
                'verbose_name': 'Movimiento de Stock',
                'verbose_name_plural': 'Movimientos de Stock',
                'db_table': 'tauser_movimiento_stock',
                'ordering': ['-fecha_movimiento'],
            },
        ),
    ]
