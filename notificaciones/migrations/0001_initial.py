# Generated by Django 5.2.4 on 2025-08-26 05:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantillaNotificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo_plantilla', models.CharField(choices=[('EMAIL_VERIFICATION', 'Verificación de Email'), ('PASSWORD_RESET', 'Recuperación de Contraseña'), ('TRANSACTION_CREATED', 'Transacción Creada'), ('TRANSACTION_COMPLETED', 'Transacción Completada'), ('TRANSACTION_CANCELLED', 'Transacción Cancelada'), ('RATE_ALERT', 'Alerta de Tasa'), ('ACCOUNT_LOCKED', 'Cuenta Bloqueada'), ('LOGIN_NOTIFICATION', 'Notificación de Login'), ('INVOICE_GENERATED', 'Factura Generada'), ('SYSTEM_MAINTENANCE', 'Mantenimiento del Sistema')], max_length=30, unique=True)),
                ('asunto_email', models.CharField(max_length=200)),
                ('cuerpo_email_html', models.TextField(help_text='Cuerpo del email en HTML')),
                ('cuerpo_email_texto', models.TextField(help_text='Cuerpo del email en texto plano')),
                ('cuerpo_sms', models.CharField(blank=True, max_length=160)),
                ('titulo_push', models.CharField(blank=True, max_length=100)),
                ('cuerpo_push', models.CharField(blank=True, max_length=200)),
                ('esta_activa', models.BooleanField(default=True)),
                ('variables', models.JSONField(default=list, help_text='Variables disponibles para la plantilla')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plantilla de Notificación',
                'verbose_name_plural': 'Plantillas de Notificación',
                'db_table': 'notificaciones_plantilla',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_notificacion', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push'), ('IN_APP', 'En la Aplicación')], max_length=20)),
                ('asunto', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('ENVIADO', 'Enviado'), ('ENTREGADO', 'Entregado'), ('FALLIDO', 'Fallido'), ('LEIDO', 'Leído')], default='PENDIENTE', max_length=20)),
                ('email_destinatario', models.EmailField(blank=True, max_length=254)),
                ('telefono_destinatario', models.CharField(blank=True, max_length=20)),
                ('datos_contexto', models.JSONField(default=dict, help_text='Datos adicionales para la plantilla')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_envio', models.DateTimeField(blank=True, null=True)),
                ('fecha_entrega', models.DateTimeField(blank=True, null=True)),
                ('fecha_lectura', models.DateTimeField(blank=True, null=True)),
                ('mensaje_error', models.TextField(blank=True)),
                ('conteo_reintentos', models.PositiveIntegerField(default=0)),
                ('max_reintentos', models.PositiveIntegerField(default=3)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
                ('plantilla', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to='notificaciones.plantillanotificacion')),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'db_table': 'notificaciones_notificacion',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PreferenciaNotificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_actualizaciones_transaccion', models.BooleanField(default=True)),
                ('email_alertas_tasa', models.BooleanField(default=True)),
                ('email_alertas_seguridad', models.BooleanField(default=True)),
                ('email_marketing', models.BooleanField(default=False)),
                ('email_notificaciones_sistema', models.BooleanField(default=True)),
                ('sms_actualizaciones_transaccion', models.BooleanField(default=False)),
                ('sms_alertas_tasa', models.BooleanField(default=False)),
                ('sms_alertas_seguridad', models.BooleanField(default=True)),
                ('push_actualizaciones_transaccion', models.BooleanField(default=True)),
                ('push_alertas_tasa', models.BooleanField(default=True)),
                ('push_alertas_seguridad', models.BooleanField(default=True)),
                ('frecuencia_notificacion', models.CharField(choices=[('IMMEDIATE', 'Inmediato'), ('DAILY', 'Diario'), ('WEEKLY', 'Semanal'), ('NEVER', 'Nunca')], default='IMMEDIATE', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferencias_notificacion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preferencia de Notificación',
                'verbose_name_plural': 'Preferencias de Notificación',
                'db_table': 'notificaciones_preferencia',
            },
        ),
        migrations.CreateModel(
            name='TicketSoporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ticket', models.CharField(blank=True, max_length=20, unique=True)),
                ('email_usuario', models.EmailField(max_length=254)),
                ('nombre_usuario', models.CharField(max_length=200)),
                ('asunto', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('categoria', models.CharField(choices=[('TECNICO', 'Técnico'), ('CUENTA', 'Cuenta'), ('TRANSACCION', 'Transacción'), ('FACTURACION', 'Facturación'), ('GENERAL', 'General'), ('SUGERENCIA', 'Sugerencia')], max_length=20)),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='MEDIA', max_length=20)),
                ('estado', models.CharField(choices=[('ABIERTO', 'Abierto'), ('EN_PROGRESO', 'En Progreso'), ('PENDIENTE_USUARIO', 'Pendiente Usuario'), ('RESUELTO', 'Resuelto'), ('CERRADO', 'Cerrado')], default='ABIERTO', max_length=20)),
                ('resolucion', models.TextField(blank=True)),
                ('fecha_resolucion', models.DateTimeField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('adjuntos', models.JSONField(default=list, help_text='Lista de archivos adjuntos')),
                ('asignado_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_asignados', to=settings.AUTH_USER_MODEL)),
                ('resuelto_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_resueltos', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets_soporte', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket de Soporte',
                'verbose_name_plural': 'Tickets de Soporte',
                'db_table': 'notificaciones_ticket_soporte',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='MensajeTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField()),
                ('es_interno', models.BooleanField(default=False, help_text='Mensaje interno (no visible para el usuario)')),
                ('adjuntos', models.JSONField(default=list, help_text='Archivos adjuntos al mensaje')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_ticket', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='notificaciones.ticketsoporte')),
            ],
            options={
                'verbose_name': 'Mensaje de Ticket',
                'verbose_name_plural': 'Mensajes de Ticket',
                'db_table': 'notificaciones_mensaje_ticket',
                'ordering': ['fecha_creacion'],
            },
        ),
    ]
