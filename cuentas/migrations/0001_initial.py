# Generated by Django 5.2.4 on 2025-08-26 07:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.CharField(max_length=255)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Permiso',
                'verbose_name_plural': 'Permisos',
                'db_table': 'cuentas_permiso',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nombre_completo', models.CharField(max_length=255)),
                ('nro_telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email_verificado', models.BooleanField(default=False)),
                ('token_verificacion_email', models.CharField(blank=True, max_length=100, null=True)),
                ('intentos_fallidos_login', models.PositiveIntegerField(default=0)),
                ('cuenta_bloqueada_hasta', models.DateTimeField(blank=True, null=True)),
                ('autenticacion_dos_factores_activa', models.BooleanField(default=False)),
                ('tokens_respaldo', models.JSONField(blank=True, default=list)),
                ('requerir_2fa_para_acciones_sensibles', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('ultimo_cliente_seleccionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ultimos_usuarios_seleccionados', to='clientes.cliente')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'cuentas_usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracionDosFactoresUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_activo', models.BooleanField(default=False)),
                ('email_activo', models.BooleanField(default=False)),
                ('numero_telefono', models.CharField(blank=True, max_length=20)),
                ('requerir_para_login', models.BooleanField(default=True)),
                ('requerir_para_transacciones', models.BooleanField(default=True)),
                ('requerir_para_cambio_contrasena', models.BooleanField(default=True)),
                ('requerir_para_cambio_configuracion', models.BooleanField(default=True)),
                ('email_recuperacion', models.EmailField(blank=True, max_length=254)),
                ('telefono_recuperacion', models.CharField(blank=True, max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracion_2fa', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración 2FA',
                'verbose_name_plural': 'Configuraciones 2FA',
                'db_table': 'cuentas_usuario_configuracion_2fa',
            },
        ),
        migrations.CreateModel(
            name='RegistroAuditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(choices=[('LOGIN', 'Inicio de Sesión'), ('LOGOUT', 'Cierre de Sesión'), ('FAILED_LOGIN', 'Intento de Login Fallido'), ('ACCOUNT_LOCKED', 'Cuenta Bloqueada'), ('PASSWORD_CHANGE', 'Cambio de Contraseña'), ('EMAIL_VERIFICATION', 'Verificación de Email'), ('PROFILE_UPDATE', 'Actualización de Perfil'), ('TRANSACTION_CREATE', 'Transacción Creada'), ('TRANSACTION_UPDATE', 'Transacción Actualizada'), ('RATE_UPDATE', 'Actualización de Tasa'), ('CLIENT_CHANGE', 'Cambio de Cliente'), ('2FA_SETUP', 'Configuración 2FA'), ('2FA_DISABLE', 'Desactivación 2FA'), ('2FA_VERIFY', 'Verificación 2FA'), ('BACKUP_TOKEN_USED', 'Token de Respaldo Usado'), ('ROLE_ASSIGNED', 'Rol Asignado'), ('ROLE_REMOVED', 'Rol Removido'), ('ROLE_CREATED', 'Rol Creado'), ('ROLE_UPDATED', 'Rol Actualizado'), ('ROLE_DELETED', 'Rol Eliminado')], max_length=50)),
                ('descripcion', models.TextField()),
                ('direccion_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('agente_usuario', models.TextField(blank=True, null=True)),
                ('marca_de_tiempo', models.DateTimeField(auto_now_add=True)),
                ('datos_adicionales', models.JSONField(blank=True, null=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Auditoría',
                'verbose_name_plural': 'Logs de Auditoría',
                'db_table': 'cuentas_registro_auditoria',
                'ordering': ['-marca_de_tiempo'],
            },
        ),
        migrations.CreateModel(
            name='RestablecimientoContrasena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, unique=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('utilizado', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recuperación de Contraseña',
                'verbose_name_plural': 'Recuperaciones de Contraseña',
                'db_table': 'cuentas_restablecimiento_contrasena',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_rol', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('es_sistema', models.BooleanField(default=False, help_text='Rol del sistema que no se puede eliminar')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('permisos', models.ManyToManyField(blank=True, related_name='roles', to='cuentas.permiso')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'db_table': 'cuentas_rol',
                'ordering': ['nombre_rol'],
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='usuarios', to='cuentas.rol'),
        ),
        migrations.CreateModel(
            name='VerificacionEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, unique=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('utilizado', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Verificación de Email',
                'verbose_name_plural': 'Verificaciones de Email',
                'db_table': 'cuentas_verificacion_email',
            },
        ),
    ]
